Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName='src/ImmutableListView.js';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _immutable=require('immutable');var _immutable2=_interopRequireDefault(_immutable);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactNative=require('react-native');var _utils=require('./utils');var _utils2=_interopRequireDefault(_utils);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ImmutableListView=function(_PureComponent){_inherits(ImmutableListView,_PureComponent);function ImmutableListView(){var _ref;var _temp,_this,_ret;_classCallCheck(this,ImmutableListView);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=ImmutableListView.__proto__||Object.getPrototypeOf(ImmutableListView)).call.apply(_ref,[this].concat(args))),_this),_this.state={dataSource:new _reactNative.ListView.DataSource({rowHasChanged:function rowHasChanged(prevRowData,nextRowData){return!_immutable2.default.is(prevRowData,nextRowData);},getRowData:function getRowData(dataBlob,sectionID,rowID){var rowData=_utils2.default.getValueFromKey(sectionID,dataBlob);return _utils2.default.getValueFromKey(rowID,rowData);},sectionHeaderHasChanged:_this.props.sectionHeaderHasChanged,getSectionHeaderData:function getSectionHeaderData(dataBlob,sectionID){return _utils2.default.getValueFromKey(sectionID,dataBlob);}}),interactionOngoing:true},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(ImmutableListView,[{key:'componentWillMount',value:function componentWillMount(){this.canSetState=true;this.setStateFromPropsAfterInteraction(this.props);}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(newProps){this.setStateFromPropsAfterInteraction(newProps);}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.canSetState=false;}},{key:'setStateFromPropsAfterInteraction',value:function setStateFromPropsAfterInteraction(props){var _this2=this;this.setStateFromProps(props,false);if(props.rowsDuringInteraction>=0){_reactNative.InteractionManager.runAfterInteractions(function(){_this2.setStateFromProps(props,true);});}}},{key:'setStateFromProps',value:function setStateFromProps(props,interactionHasJustFinished){if(!this.canSetState)return;var _state=this.state,dataSource=_state.dataSource,interactionOngoing=_state.interactionOngoing;var immutableData=props.immutableData,rowsDuringInteraction=props.rowsDuringInteraction,renderSectionHeader=props.renderSectionHeader;var shouldDisplayPartialData=rowsDuringInteraction>=0&&interactionOngoing&&!interactionHasJustFinished;var displayData=shouldDisplayPartialData?immutableData.slice(0,rowsDuringInteraction):immutableData;var updatedDataSource=renderSectionHeader?dataSource.cloneWithRowsAndSections(displayData,_utils2.default.getKeys(displayData),_utils2.default.getRowIdentities(displayData)):dataSource.cloneWithRows(displayData,_utils2.default.getKeys(displayData));this.setState({dataSource:updatedDataSource,interactionOngoing:interactionHasJustFinished?false:interactionOngoing});}},{key:'getListView',value:function getListView(){return this.listViewRef;}},{key:'getMetrics',value:function getMetrics(){var _listViewRef;return this.listViewRef&&(_listViewRef=this.listViewRef).getMetrics.apply(_listViewRef,arguments);}},{key:'scrollTo',value:function scrollTo(){var _listViewRef2;return this.listViewRef&&(_listViewRef2=this.listViewRef).scrollTo.apply(_listViewRef2,arguments);}},{key:'scrollToEnd',value:function scrollToEnd(){var _listViewRef3;return this.listViewRef&&(_listViewRef3=this.listViewRef).scrollToEnd.apply(_listViewRef3,arguments);}},{key:'render',value:function render(){var _this3=this;var dataSource=this.state.dataSource;var _props=this.props,immutableData=_props.immutableData,enableEmptySections=_props.enableEmptySections,renderEmpty=_props.renderEmpty;if(renderEmpty&&_utils2.default.isEmptyListView(immutableData,enableEmptySections)){return renderEmpty(this.props);}return _react2.default.createElement(_reactNative.ListView,_extends({ref:function ref(listView){_this3.listViewRef=listView;},dataSource:dataSource},this.props,{__source:{fileName:_jsxFileName,lineNumber:161}}));}}]);return ImmutableListView;}(_react.PureComponent);ImmutableListView.propTypes=_extends({},_reactNative.ListView.propTypes,{dataSource:_propTypes2.default.oneOf([undefined]),immutableData:function immutableData(props,propName,componentName){if(!_utils2.default.isImmutableIterable(props[propName])){return new Error('Invalid prop '+propName+' supplied to '+componentName+': Must be instance of Immutable.Iterable.');}},sectionHeaderHasChanged:_propTypes2.default.func,rowsDuringInteraction:_propTypes2.default.number,renderEmpty:_propTypes2.default.func});ImmutableListView.defaultProps=_extends({},_reactNative.ListView.defaultProps,{sectionHeaderHasChanged:function sectionHeaderHasChanged(prevSectionData,nextSectionData){return false;},enableEmptySections:true,removeClippedSubviews:false});exports.default=ImmutableListView;